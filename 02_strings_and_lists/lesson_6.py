# Task 1 На вход программе подаются три целых числа, записанных в одну строку через пробел. Необходимо прочитать эти
# числа и сформировать список lst, хранящий прочитанные значения в порядке их чтения. Результат (список) выведите на
# экран, используя команду:  print(lst)
#
# lst = list(map(int, input().split()))
# print(lst)


# Task 2 На вход программе подается строка с названиями городов, записанных в одну строчку через пробел. Необходимо
# прочитать эту строку и на ее основе сформировать список с помощью следующей команды: cities = input().split()
# Затем, необходимо проверить, присутствует ли в этом списке город "Москва". Вывести на экран True,
# если присутствует и False - в противном случае. Решить эту задачу следует без использования условного оператора.
#
# cities = input().split()
# print('Москва' in cities)


# Task 3 На вход программе подается строка с названиями городов, записанных в одну строчку через пробел. Прочитайте эту
# строку и на ее основе сформируйте список с помощью следующей команды: cities = input().split()
# Выведите значение последнего элемента списка cities на экран.
#
# cities = input().split()
# print(cities[-1])


# Task 4 На вход программе подаются оценки студента (целые числа от 2 до 5), записанные в одну строчку через пробел.
# Все эти оценки читаются и сохраняются в список с помощью следующей команды (прописать в программе):
# marks = list(map(int, input().split()))
# Необходимо вычислить средний балл списка marks и вывести его на экран с точностью до десятых (один знак после запятой)
#
# marks = list(map(int, input().split()))
# marks_1 = sum(marks) / len(marks)
# print(round(marks_1, 1))


# Task 5 На вход программе подаются следующие данные по книге (каждое значение с новой строки):
#     название (строка);
#     автор (строка);
#     число страниц (целое число);
#     цена (вещественное число).
# Необходимо прочитать эти данные и сохранить в списке book в порядке их чтения. Затем, из этого списка удалить 3-й
# элемент (число страниц), в качестве автора записать "Пушкин", а цену увеличить в 2 раза. Результат (список book)
# вывести на экран командой: print(book)
#
# name, autor = input(), input()
# pages = int(input())
# price = float(input())
# print([name, 'Пушкин', price * 2])


# Task 6 На вход программе подается строка с числами новых подписчиков канала по дням, записанных в одну строку через
# пробел. Необходимо прочитать эти числа и сохранить в списке, как целые числа в порядке их следования в строке. Затем,
# вывести через пробел на экран максимальное, минимальное и суммарное значения этого списка.
#
# subscribe = list(map(int, input().split()))
# print(max(subscribe), min(subscribe), sum(subscribe), sep=' ')


# Task 7 На вход программе подается строка с числами новых подписчиков канала по дням, записанных в одну строку через
# пробел. Необходимо прочитать эти числа и сохранить в списке lst, как целые числа в порядке их следования в строке.
# Затем, отсортировать элементы этого списка по убыванию и результат вывести на экран командой: print(*lst)
#
# lst = list(map(int, input().split()))
# lst.sort(reverse=True)
# print(*lst)


# Task 8 На вход программе подается строка, содержащая названия городов, записанных через пробел. Необходимо прочитать
# эту строку и на ее основе создать список lst из названий городов, добавив в его начало список cities:
# cities = ["Москва", "Тверь", "Вологда"] Выведите полученный список lst на экран командой:  print(*lst)
#
# cities = ["Москва", "Тверь", "Вологда"]
# lst = cities + input().split()
# print(*lst)


# Task 9 На вход программе подается строка, содержащая названия городов, записанных через пробел. Необходимо прочитать
# эту строку и на ее основе сформировать список lst из названий городов, добавив в его конец список cities:
# cities = ["Москва", "Тверь", "Вологда"] Выведите полученный список lst на экран командой: print(*lst)

cities = ["Москва", "Тверь", "Вологда"]
lst = input().split() + cities
print(*lst)